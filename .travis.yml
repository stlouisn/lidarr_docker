language: bash
dist: trusty
sudo: required

branches:
  only:
    - master

env:
  global:
    - BUILD_DATE="`date -u +%Y-%m-%dT%H:%M:%SZ`"
    - BUILD_NUMBER="$TRAVIS_BUILD_NUMBER"
    - DISTRIB_ID="`(docker pull stlouisn/ubuntu:rolling && docker run -it --rm stlouisn/ubuntu:rolling /bin/bash -c 'cat etc/lsb-release') | grep DISTRIB_ID | awk -F '=' {'print $2'}`"
    - DISTRIB_RELEASE="`(docker pull stlouisn/ubuntu:rolling && docker run -it --rm stlouisn/ubuntu:rolling /bin/bash -c 'cat etc/lsb-release') | grep DISTRIB_RELEASE | awk -F '=' {'print $2'}`"
    - DISTRIB_CODENAME="`(docker pull stlouisn/ubuntu:rolling && docker run -it --rm stlouisn/ubuntu:rolling /bin/bash -c 'cat etc/lsb-release') | grep DISTRIB_CODENAME | awk -F '=' {'print $2'}`"
    - DOCKER_DESCRIPTION="download, sort, and rename tv shows"
    - DOCKER_MAINTAINER="stlouisn"
    - DOCKER_NAME="sonarr"
    - DOCKER_URL="https://sonarr.tv/"
    - SCHEMA_VERSION="1.0"
    - VCS_REF="`git rev-parse --short HEAD`"
    - VCS_URL="`git remote get-url origin | head -c-5`"
  matrix:    
    - DOCKER_TAG="latest"
    - DOCKER_VERSION="`curl -sSL https://github.com/Sonarr/Sonarr/releases | grep '.tar.gz' | head -n 1 | awk -F '/v' '{print $2}' | awk -F '.tar' '{print $1}'`"

before_install:
  - sudo apt-get update -q
  - sudo apt-get upgrade -q -y
  - docker version

install:
  - sed -i -e '/^$/d' -e 's/^[ \t]*//' -e '/^#/d' Dockerfile
  - chmod 0544 rootfs/usr/local/bin/*.sh

script:
  - >
    docker build
    --label org.label-schema.build-date="$BUILD_DATE"
    --label org.label-schema.build-number="$BUILD_NUMBER"
    --label org.label-schema.description="$DOCKER_DESCRIPTION"
    --label org.label-schema.maintainer="$DOCKER_MAINTAINER"
    --label org.label-schema.name="$DOCKER_NAME"
    --label org.label-schema.url="$DOCKER_URL"
    --label org.label-schema.version="$DOCKER_VERSION"
    --label org.label-schema.schema-version="$SCHEMA_VERSION"
    --label org.label-schema.vcs-ref="$VCS_REF"
    --label org.label-schema.vcs-url="$VCS_URL"
    --tag ${DOCKER_USERNAME}/${DOCKER_NAME}:${DOCKER_TAG}
    --pull .

after_success:
  - echo ${DOCKER_PASSWORD} | docker login --username ${DOCKER_USERNAME} --password-stdin
  - docker push ${DOCKER_USERNAME}/${DOCKER_NAME}:${DOCKER_TAG}

notifications:
  email:
    on_success: never
    on_failure: change
